# Vault Secret Management Configuration
# This configures Vault to manage secrets for our applications

---
# Vault Auth Method for Kubernetes
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-auth-config
  namespace: vault
data:
  setup-auth.sh: |
    #!/bin/bash
    # Enable Kubernetes auth method
    vault auth enable kubernetes
    
    # Configure Kubernetes auth
    vault write auth/kubernetes/config \
        token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
        kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" \
        kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    
    # Create policy for KEDA
    vault policy write keda-policy - <<EOF
    path "secret/data/keda/*" {
      capabilities = ["read"]
    }
    path "secret/data/gcp/*" {
      capabilities = ["read"]
    }
    EOF
    
    # Create role for KEDA service account
    vault write auth/kubernetes/role/keda \
        bound_service_account_names=keda-operator \
        bound_service_account_namespaces=keda \
        policies=keda-policy \
        ttl=24h

---
# Job to configure Vault authentication
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-auth-setup
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-setup
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          value: "root"  # Dev mode token
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault..."
            sleep 5
          done
          
          # Enable KV secrets engine
          vault secrets enable -path=secret kv-v2 || true
          
          # Run auth setup script
          /vault/config/setup-auth.sh
        volumeMounts:
        - name: auth-config
          mountPath: /vault/config
      volumes:
      - name: auth-config
        configMap:
          name: vault-auth-config
          defaultMode: 0755
      restartPolicy: OnFailure

---
# Secret containing example GCP configuration (to be stored in Vault)
apiVersion: v1
kind: Secret
metadata:
  name: vault-gcp-secrets
  namespace: vault
type: Opaque
stringData:
  setup-secrets.sh: |
    #!/bin/bash
    # Store GCP project information in Vault
    vault kv put secret/gcp/project \
      project_id="cdsci-test" \
      region="us-central1"
    
    # Store KEDA configuration
    vault kv put secret/keda/config \
      gcp_project="cdsci-test" \
      monitoring_enabled="true"
    
    echo "Secrets stored in Vault successfully!"

---
# Job to populate Vault with secrets
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-secrets-setup
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-secrets
        image: hashicorp/vault:1.15.2
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          value: "root"  # Dev mode token
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault..."
            sleep 5
          done
          
          # Run secrets setup script
          /vault/secrets/setup-secrets.sh
        volumeMounts:
        - name: secrets-config
          mountPath: /vault/secrets
      volumes:
      - name: secrets-config
        secret:
          secretName: vault-gcp-secrets
          defaultMode: 0755
      restartPolicy: OnFailure